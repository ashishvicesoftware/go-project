// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-04-07 18:38:24.484647 -0500 CDT m=+0.024440239

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "Vice Software Example API",
        "contact": {},
        "license": {},
        "version": "1"
    },
    "host": "{{.Host}}",
    "basePath": "/api/v1",
    "paths": {
        "/contacts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all contacts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ContactResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a contact",
                "parameters": [
                    {
                        "description": "Create contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contacts/{contactID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a contact",
                "parameters": [
                    {
                        "description": "Update contact",
                        "name": "contact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ContactRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ContactResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a contact",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contacts/{contactID}/addresses": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all of a contact's addresses",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AddressResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a contact address",
                "parameters": [
                    {
                        "description": "Create address",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddressRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contacts/{contactID}/addresses/{addressID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a contact address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "addressID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a contact address",
                "parameters": [
                    {
                        "description": "Update address",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddressRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "addressID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a contact address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Contact ID",
                        "name": "contactID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "addressID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a Project",
                "parameters": [
                    {
                        "description": "ashish",
                        "name": "projectname",
                        "createdby": "createdby",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/demoProject": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all Demo projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectResponse"
                            }
                        }
                    }
                }
            },
             
        },
        "/projects/{projectID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "description": "Update project",
                        "name": "projectname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectUpdateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/demoProjects/{projectID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get user detail",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a User",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UserRequest"
                        }
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
           
        },
        "/details": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectResponse"
                            }
                        }
                    }
                }
            },
        },
        "/recent/activity": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Recent Activity",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ProjectResponse"
                            }
                        }
                    }
                }
            },
        },
        "/notes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get All Notes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.NoteResponse"
                            }
                        }
                    }
                }
            },
        },
        "/user/{userID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a User",
                "parameters": [
                    {
                        "description": "Update User",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user ",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/projects/recent": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all recent projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "items": {
                                "$ref": "#/definitions/models.RecentProjectResponse"
                            }
                        }
                    },
                     "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                  }
                }
        },
        "/codes": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all codes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SearchCodesResponse"
                            }
                        }
                    }
                }
            }
        },

        "/roles": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get all Roles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.RolesResponse"
                            }
                        }
                    }
                }
            }
        },
        "/property/{search}": {
            "get": {
               "produces": [
                   "application/json"
                   ],
               "summary": "Get search property",
               "parameters": [
                   {
                       "type": "string",
                       "description": "Search",
                       "name": "search",
                       "in": "path",
                       "required": true
                   }
               ],
               "responses": {
                       "200": {
                           "description": "ok",
                           "schema": {
                               "type": "array",
                               "items": {
                                   "$ref": "#/definitions/models.ScoutRedResponse"
                               }
                           }
                       },
                       "400": {
                           "description": "Bad Request",
                           "schema": {
                               "type": "object",
                               "$ref": "#/definitions/models.ErrorResponse"
                           }
                       },
                       "404": {
                           "description": "Not Found",
                           "schema": {
                               "type": "object",
                               "$ref": "#/definitions/models.ErrorResponse"
                           }
                       }
                    }
                }              
        },
        "/projects/{projectID}/properties/{propertyID}": {           
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a project property",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/group/{groupID}/collection/{collectionID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Collection to Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "collectionID",
                        "in": "path",
                        "required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupCodeCollectionAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }          
        },
        "/group/{groupID}/properties": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add property to Group",
                "parameters": [
                    {
                        "description": "Property",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.AddPropertyRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }, 
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Property",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },     
            
        },
        
        "/invite/project/{projectID}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send a Invitation",
                "parameters": [
                    {
                        "description": "invitation",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
       
        "/invite/email/project/{ProjectID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get invite Detail using email for a project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "ProjectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/invitation/{ProjectID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a invite Detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "ProjectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/inviter/details/{projectID}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a inviter Detail",
                "parameters": [
                    {
                        "description": "invitation",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UserEmailRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/collaborator/{collaboratorID}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Collaborator",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Collaborator ID",
                        "name": "collaboratorID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "accept Invitation",
                "parameters": [
                    {
                        "description": "Accept Invitation",
                        "name": "invitation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UpdateInviteRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Invitation ID",
                        "name": "invitationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        
        "/invite/resend/{inviteID}/group/{groupId}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Resend a Invitation",
                "parameters": [
                    {
                        "description": " resend invitation",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Invite ID",
                        "name": "inviteID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/invite/resend":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Resend a Invitation",
                "parameters": [
                    {
                        "description": " resend invitation",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteResendRequest"
                        }
                    } 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteCollaboratorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/projects/{projectID}/property/{propertyID}/notes/{noteID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a note",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Note",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/remove/user/{inviteGroupID}" : {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Remove User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Invite Group ID",
                        "name": "inviteGroupID",
                        "in": "path",
                        "required": true
                    },
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },  
        },
        "/property/{propertyID}/notes":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a Note",
                "parameters": [
                    {
                        "description": "Note",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a note",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/note/{noteID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Note",
                "parameters": [
                    {
                        "description": "Update Note",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteUpdateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/properties/{propertyID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a property",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/property/{propertyID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a property",
                "parameters": [
                    {
                        "description": "Update property",
                        "name": "property",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.UpdatePropertyRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/project/duplicate/{projectID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Duplicate a project",
                "parameters": [
                    {
                        "description": "Duplicate a Project",
                        "name": "Project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.DuplicateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/duplicate/project/{projectID}/group/{groupID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Duplicate a Group",
                "parameters": [
                    {
                        "description": "Duplicate a Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.DuplicateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/duplicate/{projectID}/property/{propertyID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Duplicate a Property",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Property ID",
                        "name": "propertyID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/send/invite": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send a Email",
                "parameters": [
                    {
                        "description": "Invite",
                        "name": "sendEmail",
                         "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InvitePersonToCollaborateOnProject"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK", 
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/submit/feedback": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Submit Feedback",
                "parameters": [
                    {
                        "description": "Submit Feedback",
                        "name": "SubmitFeedback",
                         "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.SubmitFeedbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK", 
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },

        "/sendEmailToSupportTeam": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send Email to Support Team",
                "parameters": [
                    {
                        "description": "Send Email to Support Team",
                        "name": "SendEmailToSupport",
                         "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.SendEmailToSupportRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK", 
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/company/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Company Information",
                "parameters": [
                    {
                        "description": "Company Information",
                        "name": "company",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CompanyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK", 
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CompanyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/invite/{inviteId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Accept Invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "invitation ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                         }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/invite/{inviteId}/group/{groupId}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Accept Invitation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "invitation ID",
                        "name": "inviteId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "group ID",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                         }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
      
        "/codes/{codeID}/notes":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a Note",
                "parameters": [
                    {
                        "description": "Note",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeNoteRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Code ID",
                        "name": "codeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Code note",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Code ID",
                        "name": "codeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },          
        },
        "/codes/notes/{noteID}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Note",
                "parameters": [
                    {
                        "description": "Update Note",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteUpdateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Code note ",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/productTour": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Note",
                "parameters": [
                    {
                        "description": "Update IsIntro ",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.DoIntroRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },      
        },
        "/code/{codeID}/note/{noteID}": {
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a Note",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Code ID",
                        "name": "codeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/note/{noteID}/noteThreads":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add a Note Comment",
                "parameters": [
                    {
                        "description": "Note Comment",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeNoteRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get a Code note comment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "noteID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },         
        },
        "/user_codes/{codeCollectionID}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Code to server",
                "parameters": [
                    {
                        "description": "Save code",
                        "name": "code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "CodeCollection ID",
                        "name": "codeCollectionID",
                        "in": "path",
                        "required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code WRT to user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },         
        },
        "/library_codes/{codeLibraryID}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Code to server",
                "parameters": [
                    {
                        "description": "Save code",
                        "name": "code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "CodeLibrary ID",
                        "name": "codeLibraryID",
                        "in": "path",
                        "required": true
                    }  
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
                    
        },
        "/send/password-reset": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send Reset Password Link",
                "parameters": [
                    {
                        "description": "Send Reset password Link",
                        "name": "reset password",
                         "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ResetPasswordLink"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK", 
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        

        "/groups/{projectID}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a Group",
                "parameters": [
                    {
                        "description": "Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/groups/{groupID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Group  Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }      
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Group Detail",
                "parameters": [
                    {
                        "description": "Update Group",
                        "name": "group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeCollectionAssociation":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "code collection detail",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeCollectionAssociation/{codeCollectionAssociationID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code Collection Association Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeCollectionAssociation ID",
                        "name": "codeCollectionAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Code Collection ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeCollectionAssociation ID",
                        "name": "codeCollectionAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeCollection":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Collection detail",
                "parameters": [
                    {
                        "description": "Collection",
                        "name": "collection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsRequest"
                        }
                    }, 
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },    
        "/codeCollection/{codeCollectionID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code Collection Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeCollection ID",
                        "name": "codeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Code Collection Detail",
                "parameters": [
                    {
                        "description": "Update Code Collection Detail",
                        "name": "codeCollection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "codeCollection ID",
                        "name": "codeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Code Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection ID",
                        "name": "codeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeLibrary/{codeLibraryID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code Library Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeLibrary ID",
                        "name": "codeLibraryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a Code Library Detail",
                "parameters": [
                    {
                        "description": "Update Code Library Detail",
                        "name": "codeLibrary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "codeLibrary ID",
                        "name": "codeLibrary",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Code Library",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeLibray ID",
                        "name": "codeLibraryID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeCollections": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code Collections",
               
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
        },
        "/codeLibrary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get Code Collections",
               
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Post Code Library",
                "parameters": [  
                    {
                        "description": "Code Library",
                        "name": "codeLibrary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsRequest"
                        }
                    }
             
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models. CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        
        "/projectGroup":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Project detail",
                "parameters": [
                    {
                        "description": "Project",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectGroupsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/projectGroup/{projectGroupID}": {         
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get project group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "projectGroup ID",
                        "name": "projectGroupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ProjectGroupsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Project Group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ProjectGroup ID",
                        "name": "projectGroupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeGroupsAssociation":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Code Group detail",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeGroupAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeGroupsAssociation/{codeGroupsAssociationID}": {         
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get code group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeGroupsAssociation ID",
                        "name": "codeGroupsAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Code Group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "codeGroupsAssociation ID",
                        "name": "codeGroupsAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/propertyGroupsAssociation":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Property Group detail",
                "parameters": [
                    {
                        "description": "ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyGroupAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/propertyGroupsAssociation/{propertyGroupsAssociationID}": {         
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get property group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "propertyGroupsAssociation ID",
                        "name": "propertyGroupsAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PropertyGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete Property Group ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "propertyGroupsAssociation ID",
                        "name": "propertyGroupsAssociationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/files":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Files detail",
                "parameters": [
                    {
                        "description": "Files",
                        "name": "files",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/files/{filesID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get file Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "files ID",
                        "name": "filesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },    
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a File Detail",
                "parameters": [
                    {
                        "description": "Update File Detail",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesUpdateRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "file ID",
                        "name": "filesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "files ID",
                        "name": "filesID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/filesGroup":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Files Group detail",
                "parameters": [
                    {
                        "description": "Files Group",
                        "name": "filesGroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesGroupAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/filesGroup/{filesGroupID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get file group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filesGroup ID",
                        "name": "filesGroupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.FilesGroupAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            }, 
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete group files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filesGroup ID",
                        "name": "filesGroupID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        }, 
        "/groupCodeCollection":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": " Group  code Collection detail",
                "parameters": [
                    {
                        "description": "Files Group",
                        "name": "groupCodeCollection",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupCodeCollectionAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupCodeCollectionAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },      
        "/groupCodeCollection/{groupCodeCollectionID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get file group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupCodeCollection ID",
                        "name": "groupCodeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupCodeCollectionAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            }, 
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete group files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupCodeCollection ID",
                        "name": "groupCodeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        }, 
        "/groupUser":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": " Group  User detail",
                "parameters": [
                    {
                        "description": "Group User",
                        "name": "groupUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupUserAssociationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupUserAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        }, 
        "/groups/{groupID}/properties/{propertyID}": {              
            "delete": {
                 "produces": [
                     "application/json"
                 ],
                 "summary": "Delete a group property",
                 "parameters": [
                     {
                         "type": "string",
                         "description": "Group ID",
                         "name": "groupID",
                         "in": "path",
                         "required": true
                     },
                     {
                         "type": "integer",
                         "description": "Property ID",
                         "name": "propertyID",
                         "in": "path",
                         "required": true
                     }
                 ],
                 "responses": {
                     "200": {
                         "description": "{}",
                         "schema": {
                             "type": "string"
                         }
                     },
                     "400": {
                         "description": "Bad Request",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     },
                     "404": {
                         "description": "Not Found",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     }
                 }
             },
         },
         "/groups/{groupID}/codeCollections/{codeCollectionID}": {              
            "delete": {
                 "produces": [
                     "application/json"
                 ],
                 "summary": "Delete a group code",
                 "parameters": [
                     {
                         "type": "string",
                         "description": "Group ID",
                         "name": "groupID",
                         "in": "path",
                         "required": true
                     },
                     {
                         "type": "string",
                         "description": "CodeCollection  ID",
                         "name": "codeCollectionID",
                         "in": "path",
                         "required": true
                     }
                 ],
                 "responses": {
                     "200": {
                         "description": "{}",
                         "schema": {
                             "type": "string"
                         }
                     },
                     "400": {
                         "description": "Bad Request",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     },
                     "404": {
                         "description": "Not Found",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     }
                 }
             },
         },
         "/groups/{groupID}/files/{fileID}": {              
            "delete": {
                 "produces": [
                     "application/json"
                 ],
                 "summary": "Delete a group file",
                 "parameters": [
                     {
                         "type": "string",
                         "description": "Group ID",
                         "name": "groupID",
                         "in": "path",
                         "required": true
                     },
                     {
                         "type": "integer",
                         "description": "File ID",
                         "name": "fileID",
                         "in": "path",
                         "required": true
                     }
                 ],
                 "responses": {
                     "200": {
                         "description": "{}",
                         "schema": {
                             "type": "string"
                         }
                     },
                     "400": {
                         "description": "Bad Request",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     },
                     "404": {
                         "description": "Not Found",
                         "schema": {
                             "type": "object",
                             "$ref": "#/definitions/models.ErrorResponse"
                         }
                     }
                 }
             },
         },

            
        "/groupUser/{groupUserID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Get file group Detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupUser ID",
                        "name": "groupUserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.GroupUserAssociationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }       
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete user group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupUser ID",
                        "name": "groupUserID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },
        "/codeCollections/{codeCollectionID}/codeLibrary/{codeLibraryID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add Code Library To Code Collection",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CodeLibarary ID",
                        "name": "codeLibraryID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Code Collection ID",
                        "name": "codeCollectionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.CodeCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/invite/project/{projectID}/group/{groupID}":{
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send a Invitation",
                "parameters": [
                    {
                        "description": "invitation",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteGroupRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "group ID",
                        "name": "groupID",
                        "in": "path",
                        "required": true
                    },
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },      
        
        "/user/details/{email}":{
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get User Details using email",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.InviteGroupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
        },      

        "/invite/invitedUser/{projectID}": {
                        "get": {
                            "consumes": [
                                "application/json"
                            ],
                            "produces": [
                                "application/json"
                            ],
                            "summary": "Fetch Invited Group User",
                            "parameters": [
                                {
                                    "type": "integer",
                                    "description": "Project ID",
                                    "name": "projectID",
                                    "in": "path",
                                    "required": true
                                }
                            ],
                            "responses": {
                                "200": {
                                    "description": "OK",
                                    "schema": {
                                        "type": "object",
                                        "$ref": "#/definitions/models.models.InviteGroupUserResponse"
                                    }
                                },
                                "400": {
                                    "description": "Bad Request",
                                    "schema": {
                                        "type": "object",
                                        "$ref": "#/definitions/models.ErrorResponse"
                                    }
                                }
                            }
                        },
            },
            "/invite/resetUserRoles":{
                "put": {
                    "consumes": [
                        "application/json"
                    ],
                    "produces": [
                        "application/json"
                    ],
                    "summary": "Reset Invited User Roles",
                    "parameters": [
                        {
                            "description": " reset invited user roles",
                            "name": "name",
                            "in": "body",
                            "required": true,
                            "schema": {
                                "type": "object",
                                "$ref": "#/definitions/models.UserRolesRequest"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK",
                            "schema": {
                                "type": "object",
                                "$ref": "#/definitions/models.InviteUserResponse"
                            }
                        },
                        "400": {
                            "description": "Bad Request",
                            "schema": {
                                "type": "object",
                                "$ref": "#/definitions/models.ErrorResponse"
                            },
                        "404": {
                            "description": "Not Found",
                            "schema": {
                                "type": "object",
                                "$ref": "#/definitions/models.ErrorResponse"
                            }
                        }
                    }
                }
            }
        },
    

        "/ping": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Ping server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.PingResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddressRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Washington"
                },
                "line1": {
                    "type": "string",
                    "example": "1600 Pennsylvania Ave."
                },
                "line2": {
                    "type": "string",
                    "example": "Ste. 1234"
                },
                "postalCode": {
                    "type": "string",
                    "example": "20006"
                },
                "stateProvince": {
                    "type": "string",
                    "example": "DC"
                }
            }
        },
        "models.AddressResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Washington"
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "line1": {
                    "type": "string",
                    "example": "1600 Pennsylvania Ave."
                },
                "line2": {
                    "type": "string",
                    "example": "Ste. 1234"
                },
                "postalCode": {
                    "type": "string",
                    "example": "20006"
                },
                "stateProvince": {
                    "type": "string",
                    "example": "DC"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                }
            }
        },
        "models.GroupRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },                        
            }
        },
        "models.GroupUpdateRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },                       
            }
        },
            
    "models.CodeGroupAssociationRequest":{
        "type": "object",
        "properties": {
            "codeId": {
                "type": "int",
                "example": 1
            },
            "groupId": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            },
        }
    },
    "models.GroupUserAssociationRequest":{
        "type": "object",
        "properties": {
            "groupId": {
                "type": "string",
                "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
            },
            "userId": {
                "type": "string",
                "example":"auth-0111e9-8529-97b20f595a0e"
            },                            
        }
    },
    "models.CodeGroupAssociationResponse":{
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            },
            "codeId": {
                "type": "int",
                "example": 1
            },
            "groupId": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            }
        }
    },
    "models.PropertyGroupAssociationRequest":{
        "type": "object",
        "properties": {
            "propertyId": {
                "type": "int",
                "example": 1
            },
            "groupId": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            },
        }
    },
    "models.PropertyGroupAssociationResponse":{
        "type": "object",
        "properties": {
            "id": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            },
            "propertyId": {
                "type": "int",
                "example": 1
            },
            "groupId": {
                "type": "string",
                "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
            }
        }
    },
        "models.GroupResponse": {
            "type": "object",
            "properties": {
                "id":{
                    "type":"string",
                    "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                }, 
                "createdBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "isActive":{
                    "type":"bool",
                    "example":true,
                },
                "property":{
                    "type":"object",
                    "items": {
                        "$ref": "#/definitions/models.PropertyForGroupResponse"
                    }
                }
            }
        }, 
        "models.CodeCollectionAssociationRequest":{
            "type": "object",
            "properties": {
                "codeId": {
                    "type": "int",
                    "example": 1
                },
                "codeCollectionID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
            }
        },
        "models.PropertyForGroupResponse":{
            "type":"objects",
            "propertites":{
                "id":{
                     "type":"int",
                    "example":1
                    },
                "parcelID":{
                    "type":"int",
                    "example":12001
                    },
                "propertyInfo":{
                    "type":"string",
                    "example":"John"
                     },
                "city":{
                    "type":"string",
                    "example":"Washington"
                     },
                 "Jurisdiction":{
                    "type":"string",
                    "example":"jurisdiction"
                    },
                  "streetName":{
                     "type":"string",
                     "example":"Washington Street 44"
                      },
                  "streetSuffix":{
                          "type":"string",
                          "example":"DR" 
                         },
                   "stateProvince":{
                          "type":"string",
                          "example":"DC"   
                         },
                        "postalCode":{
                            "type":"int",
                            "example":122002
                        }
                  }
        },
        "models.CodeCollectionAssociationReponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "codeId": {
                    "type": "int",
                    "example": 1
                },
                "codeCollectionID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },
        "models.CodeCollectionsRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },                         
            }
        },

        "models.CodeCollectionsUpdateRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },                        
            }
        },
        "models.FilesRequest":{
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "http://www.google.com"
                },                         
            }
        },
        "models.FilesUpdateRequest":{
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "http://www.google.com"
                },                         
            }
        },
        "models.FilesGroupAssociationRequest":{
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "integer",
                    "example":1
                }, 
                "groupId": {
                    "type": "string",
                    "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },                            
            }
        },
        "models.GroupCodeCollectionAssociationRequest":{
            "type": "object",
            "properties": {
                "groupId": {
                    "type": "string",
                    "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "codeCollectionId": {
                    "type": "string",
                    "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },                             
            }
        },

        "models.ProjectGroupsRequest":{
            "type": "object",
            "properties": {
                "projectId": {
                    "type": "int",
                    "example": 1
                },
                "groupId": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
            }
        },
        "models.InviteResendRequest":{
            "type": "object",
            "properties": {
                "inviteID": {
                    "type": "int",
                    "example": 1
                },
                "groupID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
            }
        },
        "models.ProjectGroupsResponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "projectId": {
                    "type": "int",
                    "example": 1
                },
                "groupId": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },

        "models.CodeCollectionAssociationResponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "codeId": {
                    "type": "int",
                    "example": 1
                },
                "codeCollectionID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },

        "models.GroupCodeCollectionAssociationResponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "groupId": {
                    "type": "int",
                    "example": 1
                },
                "codeCollectionID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },
        "models.GroupUserAssociationResponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "groupId": {
                    "type": "int",
                    "example": 1
                },
                "userID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },
        "models.ScoutRedResponse": {
            "type": "array",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": "Washington"
                },
                "parcelid": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "apn": {
                    "type": "string",
                    "example": "ca"
                },
                "apnFmt": {
                    "type": "string",
                    "example": "1600 Pennsylvania Ave."
                },
                "full": {
                    "type": "string",
                    "example": "Ste. 1234"
                }
            }
        },
        "models.ContactRequest": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                }
            }
        },
        "models.ContactResponse": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AddressResponse"
                    }
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "firstName": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastName": {
                    "type": "string",
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                }
            }
        },
        "models.ProjectResponse":{
            "type":"object",
            "properties": {
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdBy": {
                    "type": "integer",
                    "example": 2
                },
            }
        },
        "models.UserResponse":{
            "type":"object",
            "properties": {
                "user_id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "email": {
                    "type": "string",
                    "example": "ashish@vicesoftware.com"
                },
                "isActive": {
                    "type": "bool",
                    "example": "True"
                },
                "image_url": {
                    "type": "string",
                    "example": "True"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
            }
        },
        
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.PingResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string",
                    "example": "pong"
                }
            }
        },
        "models.ProjectRequest": {
            "type": "object",
            "properties": {
                "projectname": {
                    "type": "string",
                    "example": "John"
                },
                 
            }
        },
        "models.AddPropertyRequest":{
            "type": "object",
            "properties": {
                 
                "parcelID": {
                    "type": "int",
                    "example": 212344
                },
                "city": {
                    "type": "string",
                    "example": "new jersey"
                },
                "postalCode": {
                    "type": "int",
                    "example": 122002
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "StateProvince":{
                    "type": "string",
                    "example": "CA"  
                 },
                 "propertyInfo":{
                    "type": "string",
                    "example": "a quick brown fox jumps over the little lazy dog"  
                 },
                 "streetName":{
                    "type": "string",
                    "example": "New york street"  
                 },
                 "streetNumber":{
                    "type": "string",
                    "example": "New york street 44"  
                 },
                 "streetSuffix":{
                    "type": "string",
                    "example": "AD"  
                 },
                 "jurisdiction":{
                    "type": "string",
                    "example": "San Diego"  
                 },
                 "name":{
                    "type":"string",
                    "example":"New york street 44 NY"
                 }
          }
        },
        "models.ProjectUpdateRequest":{
            "type": "object",
            "properties": {
                "projectname": {
                    "type": "string",
                    "example": "John"
                } 
            }
        },
        "models.NoteUpdateRequest":{
            "type": "object",
            "properties": {
                "note": {
                    "type": "string",
                    "example": "A quick brown fox"
                } 
            }
        },
        "models.InviteCollaboratorRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "lastname":{
                    "type":"string",
                    "example":"Miles"
                },
                "email": {
                    "type": "string",
                    "example": "John@vicesoftware.com"
                },
                "role": {
                    "type": "int",
                    "example": 1
                },
                "status": {
                    "type": "int",
                    "example": 0
                }

            }
        },
        
        "models.InviteCollaboratorResponse":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "lastname": {
                    "type": "string",
                    "example": "Miles"
                },
                "email": {
                    "type": "string",
                    "example": "John@vicesoftware.com"
                },
                "role": {
                    "type": "string",
                    "example": "collaborator"
                },
                "projectID": {
                    "type": "int",
                    "example": "4"
                },
                "userID": {
                    "type": "string",
                    "example": "5"
                },
                "hasAccessToCompleteProject":{
                    "type":"bool",
                    "example":"false"
                }
            }
        },
        "models.InviteGroupResponse ":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "lastname":{
                    "type": "string",
                    "example": "Miles"
                },
                "email": {
                    "type": "string",
                    "example": "John@vicesoftware.com"
                },
                "role": {
                    "type": "int",
                    "example": 1
                },
                "groupID": {
                    "type": "string",
                    "example": "4"
                }
            }
        },
        "models.NoteResponse":{
            "type":"object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "PropertyID": {
                    "type": "integer",
                    "example": "2"
                },
                "notes": {
                    "type": "string",
                    "example": "notes"
                },
                "description": {
                    "type": "string",
                    "example": "description"
                },
                "url": {
                    "type": "string",
                    "example": "https://images.pexels.com/photos/67636/rose-blue-flower-rose"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
            }
        },
  
        "models.NoteRequest":{
            "type": "object",
            "properties": {
                "note": {
                    "type": "string",
                    "example": "noteJohn"
                },
                "url": {
                    "type": "string",
                    "example": "note"
                },
            }
        },

        "models.DoIntroRequest":{
            "type": "object",
            "properties": {
                "isIntro": {
                    "type": "bool",
                    "example": "true"
                }
            }
        },

        "models.CodeCollectionsResponse": {
            "type": "object",
            "properties": {
                "id":{
                    "type":"string",
                    "example":"9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "name": {
                    "type": "string",
                    "example": "John"
                }, 
                "createdBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "isActive":{
                    "type":"bool",
                    "example":true
                },
            }
        }, 
        "models.FilesGroupAssociationResponse":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                },
                "fileId": {
                    "type": "int",
                    "example": 1
                },
                "groupID": {
                    "type": "string",
                    "example": "9aa90bac-e5de-11e9-8529-97b20f595a0e"
                }
            }
        },
        "models.FilesResponse": {
            "type": "object",
            "properties": {
                "id":{
                    "type":"integer",
                    "example":1
                },
                "url": {
                    "type": "string",
                    "example": "http://www.google.com"
                }, 
                "createdBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedBy": {
                    "type": "string",
                    "example": "John"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
            }
        }, 
        "models.PropertyResponse":{
            "type": "object",
            "properties": {
                 "ID": {
                    "type": "int",
                    "example": 1
                },
                "parcelID": {
                    "type": "int",
                    "example": 123455
                },
                "city": {
                    "type": "string",
                    "example": "New Jersey"
                },
                "postalCode": {
                    "type": "int",
                    "example": 123455
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "StateProvince": {
                    "type": "string",
                    "example": "CA"
                }
            }
        },
        "models.RecentProjectResponse":{
            "type":"object",
            "properties": {
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "description": {
                    "type": "string",
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdBy": {
                    "type": "integer",
                    "example": 2
                },
            }
        },
        "models.UserUpdateRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "test name"
                },
                "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                },
                "isActive": {
                    "type": "bool",
                    "example": "True"
                } 
            }
        },
        "models.UpdatePropertyRequest":{
            "type": "object",
            "properties": {              
                "parcelID": {
                    "type": "int",
                    "example": 212344
                },
                "city": {
                    "type": "string",
                    "example": "new jersey"
                },
                "postalCode": {
                    "type": "int",
                    "example": 122002
                },
                "country": {
                    "type": "string",
                    "example": "USA"
                },
                "StateProvince":{
                    "type": "string",
                    "example": "CA"  
                 },
                 "propertyInfo":{
                    "type": "string",
                    "example": "a quick brown fox jumps over the little lazy dog"  
                 },
          }
        },
         "models.DuplicateRequest":{
            "type": "object",
            "properties": {              
                "isDuplicateProperty": {
                    "type": "bool",
                    "example": true
                },
                "isDuplicateNotesFromProperty": {
                    "type": "bool",
                    "example": true
                },
                "isDuplicateCodes": {
                    "type": "bool",
                    "example": false
                },
                "isDuplicateNotesFromCodes": {
                    "type": "bool",
                    "example": true
                },
                "isAllSelect":{
                    "type": "bool",
                    "example": true
                 },
                 "name":{
                    "type": "string",
                    "example": "New group"
                 },
          }
        },
        "models.UserEmailRequest":{
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "CodyMiles@vicesftware.com"
                } 
            }
        },
        "models.InvitePersonToCollaborateOnProject":{
            "type": "object",
            "properties": {              
                "email": {
                    "type": "string",
                    "example": "ashish.yadav@vicesoftware.com"
                },
                "invitedBy": {
                    "type": "string",
                    "example": "ausj384u293jnjdfr"
                },
                "body": {
                    "type": "string",
                    "example": "Message body"
                },
                "projectId": {
                    "type": "int",
                    "example": 2
                },
                "role": {
                    "type":   "int",
                    "example": 2
                },
                "inviteId": {
                    "type":   "string",
                    "example": "2"
                }    
          }
        },
        "models.ResetPasswordLink":{
            "type": "object",
            "properties": {              
                "email": {
                    "type": "string",
                    "example": "ashish.yadav@vicesoftware.com"
                }               
          }
        },
        "models.SubmitFeedbackRequest":{
            "type": "object",
            "properties": {                      
                "feedbackOverview": {
                    "type": "string",
                    "example": "subject"
                },
                "description": {
                    "type": "string",
                    "example": "Message body"
                },
                "userId": {
                    "type": "string",
                    "example": "authiiosdushds"
                },
                "feedbackCategory": {
                    "type":   "string",
                    "example": "Category"
                } 
          }
        },
        "models.SendEmailToSupportRequest":{
            "type": "object",
            "properties": {                      
                "address": {
                    "type": "string",
                    "example": "3428 3rd Avenue, Sacramento, CA"
                },
                "email": {
                    "type": "string",
                    "example": "sanjeev.sharma@vicesoftware.com"
                },
                "username": {
                    "type": "string",
                    "example": "Sanjeev Sharma"
                }
          }
        },
        "models.DuplicateProjectRequest":{
            "type": "object",
            "properties": {
                "id": {
                    "type": "int",
                    "example": 2,
                } 
            }
        },
        "models.UpdateInviteRequest":{
            "type": "object",
            "properties": {
                "isInviteAccepted": {
                    "type": "int",
                    "example": 1
                } 
            }
        },
        "models.CodeNoteRequest":{
            "type": "object",
            "properties": {
                "note": {
                    "type": "string",
                    "example": "notes"
                },
                "highLightedText":{
                    "type": "string",
                    "example": "notes"
                },
            }
        },
        "models.CodeRequest":{
            "type": "object",
            "properties": {              
                "topicSummary": {
                    "type": "string",
                    "example": "a quick brown fox jumps over the litlle lazy dog"
                },
                "category": {
                    "type": "string",
                    "example": "Transitional Housing Facilities"
                },
                "number": {
                    "type": "int",
                    "example": 3298494809234
                },
          }
        },
        "models.CodeResponse":{
            "type":"object",
            "properties": {
                "TopicSummary": {
                    "type": "string",
                    "example": "a quick brown fox jumps over the litlle lazy dog"
                },
                "Category": {
                    "type": "string",
                    "example": "Transitional Housing Facilities"
                },
                "number": {
                    "type": "int",
                    "example": 3298494809234
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
            }
        },
        "models.UserRequest":{
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Cody Miles"
                },
                "email": {
                    "type": "string",
                    "example": "cody@vicesoftware.com"
                },
                "isActive": {
                    "type": "bool",
                    "example": True
                },
                "image_url": {
                    "type": "string",
                    "example": "True"
                } 
            }
        },
        "models.CompanyResponse":{
            "type":"object",
            "properties": {
                "projectName": {
                    "type": "string",
                    "example": "Innostax"
                },
                "email": {
                    "type": "string",
                    "example": "ashish@vicesoftware.com"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "9814444444"
                },
                "address": {
                    "type": "string",
                    "example": "gurgaon"
                },
                "city": {
                    "type": "string",
                    "example": "gurgaon"
                },
                "state": {
                    "type": "string",
                    "example": "haryana"
                }
            }
        },
        "models.ActiveCollaboratorResponse":{
            "type":"object",
            "properties": {
                "projectID": {
                    "type": "int",
                    "example":1
                },
                "userID": {
                    "type":"string",
                    "example":"google-oauth2|100700139019068209339"
                },
                "roleID": {
                    "type":"int",
                    "example": 2
                },
                "inviteID": {
                    "type": "int",
                    "example": 1
                }
            }
        },
        "models.ActiveCollaboratorRequest":{
            "type": "object",
            "properties": {
                "projectID": {
                    "type": "int",
                    "example":1
                },
                "userID": {
                    "type": "string",
                    "example":"google-oauth2|100700139019068209339"
                },
                "roleID": {
                    "type": "int",
                    "example": 1
                },
                "inviteID": {
                    "type": "int",
                    "example": 1
                }
            }
        },
        "models.InviteGroupRequest":{
            "type": "object",
           "properties":{
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "lastname":{
                    "type": "string",
                    "example": "Miles"
                },
                "email": {
                    "type": "string",
                    "example": "John@vicesoftware.com"
                },
                "role": {
                    "type": "int",
                    "example": 1
                },
            }
        },
        "models.CompanyDetailsRequest":{
            "type": "object",
            "properties": {
                 
                "companyName": {
                    "type": "string",
                    "example": "Innostax"
                },
                "phoneNumber": {
                    "type": "string",
                    "example": "98144553355"
                },
                "email": {
                    "type": "string",
                    "example": "cody@vicesoftware.com"
                },
                "address": {
                    "type": "string",
                    "example": "Gurgaon"
                },
                "city": {
                    "type": "string",
                    "example": "Gurgaon"
                },
                "state": {
                    "type": "string",
                    "example": "Haryana"
                },
                "zipCode": {
                    "type": "string",
                    "example": "122002"
                },
                "billingContactEmail": {
                    "type": "string",
                    "example": "aditya.vashistha@vicesoftware.com"
                },
                "billingContactName": {
                    "type": "string",
                    "example": "Aditya"
                } 
            }
          }
        },


        "models.InviteupdateRequest":{
            "type": "object",
            "properties": {
                "isInviteAccepted": {
                    "type": "int",
                    "example": 1
                } 
            }
        }, 
        "models.SearchCodesResponse": {
            "type": "object",
            "properties": {
                "topicSummary": {
                    "type": "string",
                    "example": "Washington"
                },
                "category": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "number": {
                    "type": "integer",
                    "example": 1
                },
            }
        },
        "models.InviteGroupUserResponse":{
            "type":"object",
            "properties" : {
                "id":{
                    "type":"integer",
                    "example":1
                },
                "groupName":{
                    "type":"string",
                    "example":"Test group"
                },
                "firstname":{
                    "type":"string",
                    "example":"John"
                },
                "lastname":{
                    "type":"string",
                    "example":"John"
                },
                "isInviteAccepted":{
                    "type":"integer",
                    "example":0
                },
                "email":{
                    "type":"string",
                    "example":"sanjeev.sharma@vicesoftware.com"
                }
            }
        },     
        "models.RolesResponse": {
            "type": "object",
            "properties": {
                "role": {
                    "type": "string",
                    "example": "Admin"
                },
                "createdAt": {
                    "type": "integer",
                    "example": 1554441489907
                },
                "updatedAt": {
                    "type": "integer",
                    "example": 1554441489907
                }
            }
        },

        "models.UserRolesRequest": {
            "type":"object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 70
                },
                "role": {
                    "type": "integer",
                    "example": 2
                }
            }
        },

        "models.InviteUserResponse": {
            "type":"object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 70
                },
                "projectId": {
                    "type": "integer",
                    "example": 70
                },
                "invitedBy": {
                    "type": "string",
                    "example": "Aditya"
                },
                "name": {
                    "type": "string",
                    "example": "Aditya"
                },
                "email": {
                    "type": "string",
                    "example": "aditya.vashistha@vicesoftware.com"
                },
                "role": {
                    "type": "integer",
                    "example": 2
                },
                "lastName": {
                    "type": "string",
                    "example": "Vashistha"
                }
            }
        }


}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
